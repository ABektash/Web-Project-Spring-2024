<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Man Utd News</title>
    <link rel="stylesheet" href="/css/style.css">
    <script src="/js/script.js"></script>
    <script src="/js/API-football-data.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
</head>

<body>

    <%- include('../partials/header') %>

        <div class="news-background">
            <img src="Images/News-background.jpg" alt="Manchester-United-Crest-Background">
            <div class="news-img-overlay">
                <h2>Team News</h2>
            </div>
            <div id="breakbar"></div>
        </div>
        <section>
            <div id="matchestext">
                <h2 id="headertext"> All Matches</h2>
                <span><a class="see-All" href="/All-Matches">See All</a></span>
            </div>
            <div id="matches-grid" class="matches-grid"></div>


            <div class="container-table">
                <div id="matchestext-standings">
                    <h2 id="headertext-standings"> Standings</h2>
                </div>
                <table>
                    <thead>
                        <tr>
                            <th>Rank</th>
                            <th>Team</th>
                            <th>Points</th>
                            <th>Goals Difference</th>
                            <th>Form</th>
                        </tr>
                    </thead>
                    <tbody id="standings-body">

                    </tbody>
                </table>
            </div>
        </section>
        <script>
            function fetchNewsMatches() {
                fetch("https://v3.football.api-sports.io/fixtures?season=2023&team=33", {
                    "method": "GET",
                    "headers": {
                        "x-rapidapi-host": "v3.football.api-sports.io",
                        "x-rapidapi-key": "86bfe4c0932d846ff80b0cae2adbe19a"
                    }
                })
                    .then(response => response.json())
                    .then(data => {
                        const scrollpane = document.getElementById('matches-grid');
    
                        const matches = data.response;
                        for (let i = 0; i < 6; i++) {
                            const containerMatch = createContainerMatch(matches[i]);
                            scrollpane.appendChild(containerMatch);
                        }
                    })
                    .catch(error => console.error('Error fetching data:', error));
            }
    
            function createContainerMatch(matchData) {
                const containerMatch = document.createElement('div');
                containerMatch.classList.add('container-match');
    
                const card = document.createElement('div');
                card.classList.add('card');
    
                const cardTitle = document.createElement('div');
                cardTitle.classList.add('card_title');
    
                const h1 = document.createElement('h1');
                if (matchData.fixture.status.long === 'Match Finished') {
                    h1.textContent = 'Match finished';
                } else if (matchData.fixture.status.short === 'NS') {
                    h1.textContent = 'Upcoming Match';
                } else {
                    h1.textContent = 'Live Match';
                }
                cardTitle.appendChild(h1);
    
                const matchLocation = document.createElement('p');
                matchLocation.id = 'match_type';
                matchLocation.textContent = matchData.fixture.venue.name;
                cardTitle.appendChild(matchLocation);
    
                const matchInfo = document.createElement('div');
                matchInfo.classList.add('match_info');
    
                const teamName = document.createElement('div');
                teamName.classList.add('team_name');
    
                const homeTeamDiv = createTeamDiv(matchData.teams.home, "team1");
                const awayTeamDiv = createTeamDiv(matchData.teams.away, "team2");
    
                teamName.appendChild(homeTeamDiv);
                teamName.appendChild(awayTeamDiv);
    
                const vs = document.createElement('div');
                vs.classList.add('vs');
                vs.innerHTML = '<p>vs</p>';
    
                const dateTime = document.createElement('div');
                dateTime.classList.add('date_time');
                dateTime.innerHTML = `<p>${new Date(matchData.fixture.date).toLocaleDateString()}</p>
                                        <p>${new Date(matchData.fixture.date).toLocaleTimeString()}</p>`;
    
                matchInfo.appendChild(teamName);
                matchInfo.appendChild(vs);
                matchInfo.appendChild(dateTime);
    
                const seeDetails = document.createElement('div');
                seeDetails.classList.add('seeDetails');
    
                if (matchData.fixture.status.long === 'Match Finished') {
                    const timeNumber = document.createElement('span');
                    timeNumber.id = 'timeNumber';
                    timeNumber.textContent = matchData.goals.home + " - " + matchData.goals.away + " FT";
                    seeDetails.appendChild(timeNumber);
                } else if (matchData.fixture.status.short === 'NS') {
                    const infoButtonDiv = document.createElement('div');
                    infoButtonDiv.classList.add('info-button');
                    const infoButton = document.createElement('a');
                    infoButton.id = 'match-button';
                    infoButton.href = 'Tickets.html';
                    infoButton.tabIndex = '0';
                    infoButton.textContent = 'BUY TICKETS';
                    infoButtonDiv.appendChild(infoButton);
                    seeDetails.appendChild(infoButtonDiv);
                } else {
                    const timeNumber = document.createElement('span');
                    timeNumber.id = 'timeNumber';
                    timeNumber.textContent = matchData.goals.home + " - " + matchData.goals.away + "\t" + matchData.fixture.status.elapsed;
                    const livetimeanimation = document.createElement('span');
                    livetimeanimation.id = 'livetimeanimation';
                    livetimeanimation.textContent = "'";
                    timeNumber.appendChild(livetimeanimation);
                    seeDetails.appendChild(timeNumber);
                }
    
                card.appendChild(cardTitle);
                card.appendChild(matchInfo);
                card.appendChild(seeDetails);
    
                containerMatch.appendChild(card);
    
                return containerMatch;
            }
    
            function createTeamDiv(team, teamNum) {
                const teamDiv = document.createElement('div');
                teamDiv.classList.add(teamNum);
    
                const teamLogo = document.createElement('img');
                teamLogo.src = team.logo;
                teamLogo.alt = '';
    
                const teamName = document.createElement('h3');
                teamName.textContent = team.name;
    
                teamDiv.appendChild(teamLogo);
                teamDiv.appendChild(teamName);
    
                return teamDiv;
            }
    
    
            function fetchStandings() {
                var standingsContainer = document.querySelector(".container-table");
                var standingsTable = standingsContainer.querySelector("table tbody");
    
                fetch('https://v3.football.api-sports.io/standings?league=39&season=2023', {
                    "method": "GET",
                    "headers": {
                        "x-rapidapi-host": "v3.football.api-sports.io",
                        "x-rapidapi-key": "86bfe4c0932d846ff80b0cae2adbe19a"
                    }
                }).then(response => response.json())
                    .then(data => {
                        const standings = data.response[0].league.standings[0];
    
                        standings.forEach(team => {
                            var row = createStandingRow(team);
                            standingsTable.appendChild(row);
                        });
                    })
                    .catch(error => console.error('Error fetching data:', error));
            }
    
    
            function createStandingRow(teamData) {
                var row = document.createElement('tr');
                row.innerHTML = `
            <td>${teamData.rank}</td>
            <td class="team">
                <img src="${teamData.team.logo}" alt="${teamData.team.name} Logo">
                ${teamData.team.name}
            </td>
            <td>${teamData.points}</td>
            <td>${teamData.goalsDiff}</td>
            <td>${teamData.form}</td>
        `;
                return row;
            }
    
    
            fetchNewsMatches();
            fetchStandings();
        </script>

        <%- include('../partials/footer') %>

</body>

</html>